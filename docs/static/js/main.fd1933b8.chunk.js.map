{"version":3,"sources":["infrastructure/useQuery.ts","components/aggregation/model/AccountItemType.ts","infrastructure/useFetch.ts","infrastructure/Interceptor.ts","components/aggregation/model/CursorRange.ts","components/aggregation/model/AccountItem.ts","components/aggregation/model/MonthlySummary.ts","components/aggregation/model/MonthlyAggregation.ts","components/aggregation/model/Aggregation.ts","components/aggregation/model/useAggregationQuery.ts","components/ui/Center.tsx","infrastructure/DataSource.ts","infrastructure/DataSourceParams.ts","components/ui/FadeIn.tsx","components/ui/Loading.tsx","components/ui/WithLoading.tsx","components/date/model/Today.ts","pages/Dashboard/CurrentMonthCursor.tsx","pages/Dashboard/CursorParams.tsx","components/ui/Amount.tsx","components/ui/Mount.tsx","components/ui/Repeat.tsx","components/aggregation/MonthlyDetailsView.tsx","components/aggregation/MonthlySummaryView.tsx","pages/Dashboard/MonthlySummaryTable.tsx","pages/Dashboard/SpecifiedMonthCursor.tsx","pages/Dashboard/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useQuery","AccountItemType","url","converter","interceptor","useState","data","setData","isLoading","preProcess","postProcess","errorHandler","useEffect","a","console","log","fetch","response","ok","json","status","useFetch","setLoading","b","aPreProcess","aPostProcess","aErrorHandler","bPreProcess","bPostProcess","bErrorHandler","useCallback","useInterceptorMerge","useRequestInterceptor","defaultConverter","useConverterDefine","CursorRange","length","this","current","isInRange","cursor","specOf","accountItemType","食費","食費_個別","is収入","is特別費","category","日用品費","娯楽費","医療費","水道光熱費","通信費","住居費","特別費","元入金","AccountItem","init","accountItem","amount","Object","assign","MonthlySummary","value","filter収入","totalAmount","filter支出","filter特別費","支出","収入","特別費を除いた支出","MonthlyAggregation","month","map","it","of","reduce","acc","includes","concat","filter","categoryIs","is","Aggregation","values","slice","cursorMonth","useAggregationQuery","dataSource","aggregation","Center","props","className","DataSource","script","resource","DataSourceParams","search","urlSearchParams","URLSearchParams","get","param","FadeIn","Loading","WithLoading","if","children","Today","Date","endOfCurrentMonth","getFullYear","getMonth","Math","ceil","getTime","date","i","setDate","CurrentMonthCursor","cursorParams","cursorRange","onPrevClick","onNextClick","prevClassNames","hasPrev","join","onClick","restOfCurrentMonth","CursorParams","parseInt","range","hasNext","offsetSearch","offset","searchParams","set","toString","Amount","toLocaleString","Mount","Repeat","in","MonthlyDetailsView","monthlyAggregation","categories","categoryTotalAmount","filterByCategory","acountItemTypeAmount","filterByAccountItemType","diff","MonthlySummaryView","monthlySummary","特別費を含めない差引","特別費を含めた差引","MonthlySummaryTable","monthCursor","asSummary","SpecifiedMonthCursor","nextClassNames","year","Dashboard","state","history","useHistory","location","useLocation","cursorProps","push","pathname","prevSearch","nextSearch","isCurrentMonth","currentMonth","createBrowserHistory","InvalidParameters","error","EntryPoint","window","reload","path","render","dashboard","App","dataSourceParams","validate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd1933b8.chunk.js","sourcesContent":["import useFetch from './useFetch'\nimport { useCallback, useState } from 'react'\nimport Interceptor, { useInterceptorMerge } from './Interceptor'\n\nexport type QueryState<T> = {\n  isLoading: boolean\n  data: T | null\n}\n\nexport type Converter<T> = (json: any) => T\n\nfunction useQuery<T>(\n  url: string,\n  converter?: Converter<T>,\n  interceptor?: Interceptor\n): QueryState<T> {\n  const [data, setData] = useState<T | null>(null)\n  const [isLoading, setLoading] = useState<boolean>(false)\n  const requestInterceptor = useRequestInterceptor(\n    setData,\n    setLoading,\n    useConverterDefine(converter),\n    interceptor\n  )\n  useFetch(url, requestInterceptor)\n  return { isLoading, data }\n}\n\nfunction useConverterDefine<T>(converter?: Converter<T>): Converter<T> {\n  const defaultConverter = useCallback((json) => json as T, [])\n  return converter || defaultConverter\n}\n\nfunction useRequestInterceptor<T>(\n  setData: (data: T | null) => void,\n  setLoading: (isLoading: boolean) => void,\n  converter: Converter<T>,\n  interceptor?: Interceptor\n): Interceptor {\n  const requestInterceptor = {\n    preProcess: useCallback(() => {\n      setLoading(true)\n    }, [setLoading]),\n    postProcess: useCallback(\n      (json) => {\n        setData(converter(json))\n        setLoading(false)\n      },\n      [converter, setData, setLoading]\n    ),\n  } as Interceptor\n  return useInterceptorMerge(requestInterceptor, interceptor)\n}\n\nexport default useQuery\n","enum AccountItemType {\n  食費 = '食費',\n  食費_個別 = '食費(個別)',\n  日用品費 = '日用品費',\n  娯楽費 = '娯楽費',\n  医療費 = '医療費',\n  水道光熱費 = '水道光熱費',\n  通信費 = '通信費',\n  住居費 = '住居費',\n  特別費 = '特別費',\n  元入金 = '元入金',\n}\n\nexport default AccountItemType\n\nexport function specOf(accountItemType: AccountItemType) {\n  switch (accountItemType) {\n    case AccountItemType.食費:\n      return {\n        is収入: () => false,\n        is特別費: () => false,\n        category: () => AccountItemType.食費,\n      }\n    case AccountItemType.食費_個別:\n      return {\n        is収入: () => false,\n        is特別費: () => false,\n        category: () => AccountItemType.食費,\n      }\n    case AccountItemType.日用品費:\n      return {\n        is収入: () => false,\n        is特別費: () => false,\n        category: () => AccountItemType.日用品費,\n      }\n    case AccountItemType.娯楽費:\n      return {\n        is収入: () => false,\n        is特別費: () => false,\n        category: () => AccountItemType.娯楽費,\n      }\n    case AccountItemType.医療費:\n      return {\n        is収入: () => false,\n        is特別費: () => false,\n        category: () => AccountItemType.医療費,\n      }\n    case AccountItemType.水道光熱費:\n      return {\n        is収入: () => false,\n        is特別費: () => false,\n        category: () => AccountItemType.水道光熱費,\n      }\n    case AccountItemType.通信費:\n      return {\n        is収入: () => false,\n        is特別費: () => false,\n        category: () => AccountItemType.通信費,\n      }\n    case AccountItemType.住居費:\n      return {\n        is収入: () => false,\n        is特別費: () => false,\n        category: () => AccountItemType.住居費,\n      }\n    case AccountItemType.特別費:\n      return {\n        is収入: () => false,\n        is特別費: () => true,\n        category: () => AccountItemType.特別費,\n      }\n    case AccountItemType.元入金:\n      return {\n        is収入: () => true,\n        is特別費: () => false,\n        category: () => AccountItemType.元入金,\n      }\n  }\n}\n","import { useEffect } from 'react'\nimport Interceptor from './Interceptor'\n\nexport default function useFetch(url: string, interceptor?: Interceptor) {\n  const { preProcess, postProcess, errorHandler } = interceptor || {}\n  useEffect(() => {\n    ;(async () => {\n      preProcess && preProcess()\n      console.log(`get ${url}`)\n      const response = await fetch(url)\n      if (response.ok) {\n        const json = await response.json()\n        postProcess && postProcess(json)\n        console.log(`ok`)\n      } else {\n        errorHandler && errorHandler(response.status)\n        console.log(`error`)\n      }\n    })()\n  }, [url, preProcess, postProcess, errorHandler])\n}\n","import { useCallback } from 'react'\n\ntype Interceptor = {\n  preProcess?: () => void\n  postProcess?: (json: any) => void\n  errorHandler?: (status: number) => void\n}\n\nexport default Interceptor\n\nexport function useInterceptorMerge(\n  a?: Interceptor,\n  b?: Interceptor\n): Interceptor {\n  const {\n    preProcess: aPreProcess,\n    postProcess: aPostProcess,\n    errorHandler: aErrorHandler,\n  } = a || {}\n  const {\n    preProcess: bPreProcess,\n    postProcess: bPostProcess,\n    errorHandler: bErrorHandler,\n  } = b || {}\n  return {\n    preProcess: useCallback(() => {\n      aPreProcess && aPreProcess()\n      bPreProcess && bPreProcess()\n    }, [aPreProcess, bPreProcess]),\n    postProcess: useCallback(\n      (json: any) => {\n        aPostProcess && aPostProcess(json)\n        bPostProcess && bPostProcess(json)\n      },\n      [aPostProcess, bPostProcess]\n    ),\n    errorHandler: useCallback(\n      (status: number) => {\n        aErrorHandler && aErrorHandler(status)\n        bErrorHandler && bErrorHandler(status)\n      },\n      [aErrorHandler, bErrorHandler]\n    ),\n  } as Interceptor\n}\n","export default class CursorRange {\n  length!: number\n\n  constructor(length: number) {\n    this.length = length\n  }\n\n  hasNext(current: number): boolean {\n    return this.isInRange(current + 1)\n  }\n\n  hasPrev(current: number): boolean {\n    return this.isInRange(current - 1)\n  }\n\n  private isInRange(cursor: number): boolean {\n    return -this.length < cursor && cursor <= 0\n  }\n}\n","import AccountItemType, { specOf } from './AccountItemType'\n\nexport default class AccountItem {\n  accountItem!: AccountItemType\n  amount!: number\n\n  constructor(init: Partial<AccountItem>) {\n    Object.assign(this, init)\n  }\n\n  category(): AccountItemType {\n    return specOf(this.accountItem).category()\n  }\n\n  categoryIs(accountItemType: AccountItemType): boolean {\n    return this.category() === accountItemType\n  }\n\n  is(accountItemType: AccountItemType): boolean {\n    return this.accountItem === accountItemType\n  }\n\n  is収入(): boolean {\n    return specOf(this.accountItem).is収入()\n  }\n\n  is特別費(): boolean {\n    return specOf(this.accountItem).is特別費()\n  }\n}\n","import MonthlyAggregation from './MonthlyAggregation'\n\nexport default class MonthlySummary {\n  value!: MonthlyAggregation\n\n  private constructor(init: MonthlyAggregation) {\n    this.value = init\n  }\n\n  static of(init: MonthlyAggregation): MonthlySummary {\n    return new MonthlySummary(init)\n  }\n\n  収入() {\n    return this.value.filter収入().totalAmount()\n  }\n\n  支出() {\n    return this.value.filter支出().totalAmount()\n  }\n\n  特別費() {\n    return this.value.filter特別費().totalAmount()\n  }\n\n  特別費を除いた支出() {\n    return this.支出() - this.特別費()\n  }\n\n  特別費を含めない差引() {\n    return this.収入() - this.特別費を除いた支出()\n  }\n\n  特別費を含めた差引() {\n    return this.収入() - this.支出()\n  }\n}\n","import AccountItem from './AccountItem'\nimport AccountItemType from './AccountItemType'\nimport MonthlySummary from './MonthlySummary'\n\nexport default class MonthlyAggregation {\n  month!: string\n  data!: AccountItem[]\n\n  constructor(init: Partial<MonthlyAggregation>) {\n    Object.assign(this, {\n      ...init,\n      data: init.data?.map((it) => new AccountItem(it)),\n    })\n  }\n\n  asSummary(): MonthlySummary {\n    return MonthlySummary.of(this)\n  }\n\n  totalAmount(): number {\n    return this.data\n      .map((it) => it.amount)\n      .reduce((acc, amount) => acc + amount, 0)\n  }\n\n  categories(): AccountItemType[] {\n    return this.data\n      .map((it) => it.category())\n      .reduce(\n        (acc, category) =>\n          acc.includes(category) ? acc : acc.concat(category),\n        [] as AccountItemType[]\n      )\n  }\n\n  filterByCategory(accountItemType: AccountItemType): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter((it) => it.categoryIs(accountItemType)),\n    })\n  }\n\n  filterByAccountItemType(\n    accountItemType: AccountItemType\n  ): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter((it) => it.is(accountItemType)),\n    })\n  }\n\n  filter収入(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter((it) => it.is収入()),\n    })\n  }\n\n  filter支出(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter((it) => !it.is収入()),\n    })\n  }\n\n  filter特別費(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter((it) => it.is特別費()),\n    })\n  }\n}\n","import CursorRange from './CursorRange'\nimport MonthlyAggregation from './MonthlyAggregation'\n\nexport default class Aggregation {\n  values!: MonthlyAggregation[]\n\n  constructor(init: Partial<Aggregation>) {\n    Object.assign(this, {\n      values: init.values?.map((it) => new MonthlyAggregation(it)),\n    })\n  }\n\n  static empty(): Aggregation {\n    return new Aggregation({ values: [] })\n  }\n\n  isEmpty(): boolean {\n    return this.values.length === 0\n  }\n\n  cursorRange(): CursorRange {\n    return new CursorRange(this.values.length)\n  }\n\n  cursorMonth(cursor: number): MonthlyAggregation {\n    return this.values.slice(cursor - 1)[0]\n  }\n\n  currentMonth(): MonthlyAggregation {\n    return this.cursorMonth(0)\n  }\n}\n","import DataSource from 'infrastructure/DataSource'\nimport useQuery from 'infrastructure/useQuery'\nimport { useCallback } from 'react'\nimport Aggregation from './Aggregation'\n\nfunction useAggregationQuery(dataSource: DataSource) {\n  const url = dataSource.aggregation()\n  const converter = useCallback(\n    (json: any) => new Aggregation({ values: json }),\n    []\n  )\n  return useQuery<Aggregation>(url, converter)\n}\n\nexport default useAggregationQuery\n","import './Center.scss';\n\ntype Props = {\n  children: any\n};\n\nexport default function Center(props: Props) {\n  return <div className=\"center\" {...props} />;\n}\n","export default class DataSource {\n  script!: string\n  data!: string\n\n  constructor(init: Partial<DataSource>) {\n    Object.assign(this, init)\n  }\n\n  aggregation(): string {\n    return this.url('aggregation')\n  }\n\n  private url(resource: string): string {\n    return `https://script.google.com/macros/s/${this.script}/exec?resource=${resource}&id=${this.data}`\n  }\n}\n","import DataSource from './DataSource'\n\nexport default class DataSourceParams {\n  search!: string\n\n  constructor(search: string) {\n    this.search = search\n  }\n\n  validate(): boolean {\n    const urlSearchParams = new URLSearchParams(this.search)\n    return !![\n      urlSearchParams.get('script'),\n      urlSearchParams.get('data'),\n    ].reduce((acc, param) => acc && param)\n  }\n\n  dataSource(): DataSource {\n    const urlSearchParams = new URLSearchParams(this.search)\n    const script = urlSearchParams.get('script')!\n    const data = urlSearchParams.get('data')!\n    return new DataSource({ script, data })\n  }\n}\n","import './FadeIn.scss';\n\ntype Props = {\n  children: any\n};\n\nexport default function FadeIn(props: Props) {\n  return <div className=\"fade-in\" {...props} />;\n}\n","import './Loading.scss';\n\nexport default function Loading() {\n  return <div><div className=\"loader\">Loading...</div></div>;\n}\n","import FadeIn from './FadeIn';\nimport Loading from \"./Loading\";\n\ntype Props = {\n  if: any,\n  children: any\n};\n\nfunction WithLoading(props: Props) {\n  if (props.if) return <Loading />;\n  const children =\n    (typeof props.children === \"function\")\n      ? props.children()\n      : props.children;\n  return <FadeIn>{children}</FadeIn>;\n}\n\nexport default WithLoading;\n","class Today {\n  value!: Date\n\n  constructor() {\n    this.value = new Date()\n  }\n\n  restOfCurrentMonth(): number {\n    const endOfCurrentMonth = new Date(\n      this.value.getFullYear(),\n      this.value.getMonth() + 1,\n      0\n    )\n    return Math.ceil(\n      (endOfCurrentMonth.getTime() - this.value.getTime()) /\n        (24 * 60 * 60 * 1000)\n    )\n  }\n\n  cursorMonth(cursor: number): [number, number] {\n    const date = new Date(this.value.getTime())\n    for (let i = 0; i > cursor; i--) date.setDate(0)\n    return [date.getFullYear(), date.getMonth() + 1]\n  }\n}\n\nexport default Today\n","import CursorRange from 'components/aggregation/model/CursorRange';\nimport Today from 'components/date/model/Today';\nimport CursorParams from './CursorParams';\n\ntype Props = {\n  cursorParams: CursorParams\n  cursorRange: CursorRange\n  onPrevClick?: () => void\n  onNextClick?: () => void\n}\n\nfunction CurrentMonthCursor(props: Props) {\n  const { cursorParams, cursorRange, onPrevClick, onNextClick } = props;\n  const prevClassNames = (cursorParams.hasPrev(cursorRange)? [\"flip\"]:  [\"flip\", \"flip--disabled\"]).join(\" \");\n  const nextClassNames = \"flip flip--disabled\";\n  return (\n    <div className=\"month-cursor\">\n      <div className={prevClassNames} onClick={onPrevClick}>◀</div>\n      <div>\n        <h2>今月</h2>\n        <p>(残り {new Today().restOfCurrentMonth()} 日)</p>\n      </div>\n      <div className={nextClassNames} onClick={onNextClick}>▶</div>\n    </div>\n  );\n}\n\nexport default CurrentMonthCursor;\n","import CursorRange from \"components/aggregation/model/CursorRange\";\n\nexport default class CursorParams {\n  search!: string;\n\n  constructor(search: string) {\n    this.search = search;\n  }\n\n  isCurrentMonth(): boolean {\n    return this.cursor() === 0;\n  }\n\n  cursor(): number {\n    const urlSearchParams = new URLSearchParams(this.search);\n    return parseInt(urlSearchParams.get(\"cursor\")!) || 0;\n  }\n\n  hasNext(range: CursorRange): boolean {\n    return range.hasNext(this.cursor());\n  }\n\n  hasPrev(range: CursorRange): boolean {\n    return range.hasPrev(this.cursor());\n  }\n\n  nextSearch(): string {\n    return this.offsetSearch(1);\n  }\n\n  prevSearch(): string {\n    return this.offsetSearch(-1);\n  }\n\n  private offsetSearch(offset: number): string {\n    const searchParams = new URLSearchParams(this.search);\n    searchParams.set(\"cursor\", (this.cursor() + offset).toString())\n    return searchParams.toString();\n  }\n}\n","import { Fragment } from \"react\";\n\ntype Props = {\n  children: number\n};\n\nfunction Amount(props: Props) {\n  return (\n    <Fragment>{props.children.toLocaleString()}</Fragment>\n  );\n}\n\nexport default Amount;\n","import { Fragment } from \"react\";\n\ntype Props = {\n  if: any,\n  children: any\n};\n\nfunction Mount(props: Props) {\n  if (!props.if) return null;\n  const children =\n    (typeof props.children === \"function\")\n      ? props.children()\n      : props.children;\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default Mount;\n","import { Fragment } from \"react\";\n\ntype Props<T> = {\n  in: T[],\n  children: (it: T) => any\n};\n\nfunction Repeat<T>(props: Props<T>) {\n  return <Fragment>{props.in.map(props.children).map((it, i) => <Fragment key={i}>{it}</Fragment>)}</Fragment>\n}\n\nexport default Repeat;\n","import Amount from 'components/ui/Amount';\nimport Mount from 'components/ui/Mount';\nimport Repeat from 'components/ui/Repeat';\nimport { Fragment } from 'react';\nimport MonthlyAggregation from './model/MonthlyAggregation';\n\ntype Props = {\n  children: MonthlyAggregation\n};\n\nfunction MonthlyDetailsView(props: Props) {\n  const monthlyAggregation = props.children;\n  return (\n    <dl className=\"monthly-details\">\n      <Repeat in={monthlyAggregation.categories()}>{it => {\n        const categoryTotalAmount = monthlyAggregation.filterByCategory(it).totalAmount();\n        const acountItemTypeAmount = monthlyAggregation.filterByAccountItemType(it).totalAmount();\n        const diff = categoryTotalAmount !== acountItemTypeAmount;\n        return (\n          <Fragment>\n            <dt>{it}<Mount if={diff}>*</Mount></dt>\n            <dd><Amount>{categoryTotalAmount}</Amount></dd>\n            <Mount if={diff}>\n              <dd>(*内 純粋な{it}: <Amount>{acountItemTypeAmount}</Amount>)</dd>\n            </Mount>\n          </Fragment>\n        );\n      }}</Repeat>\n    </dl>\n  );\n}\n\nexport default MonthlyDetailsView;\n","import Amount from 'components/ui/Amount';\nimport Mount from 'components/ui/Mount';\nimport MonthlySummary from './model/MonthlySummary';\n\ntype Props = {\n  children: MonthlySummary\n};\n\nfunction MonthlySummaryView(props: Props) {\n  const monthlySummary = props.children;\n  return (\n    <dl className=\"monthly-summary\">\n      <dt>収入</dt>\n      <dd><Amount>{monthlySummary.収入()}</Amount></dd>\n      <dt>支出</dt>\n      <dd><Amount>{monthlySummary.特別費を除いた支出()}</Amount></dd>\n      <Mount if={monthlySummary.特別費()}>\n        <dd>+ 特別費: <Amount>{monthlySummary.特別費()}</Amount></dd>\n        <dd>= 計: <Amount>{monthlySummary.支出()}</Amount></dd>\n      </Mount>\n      <dt>差引</dt>\n      <dd><Amount>{monthlySummary.特別費を含めない差引()}</Amount></dd>\n      <Mount if={monthlySummary.特別費()}>\n        <dd>- 特別費: <Amount>{monthlySummary.特別費()}</Amount></dd>\n        <dd>= 計: <Amount>{monthlySummary.特別費を含めた差引()}</Amount></dd>\n      </Mount>\n    </dl>\n  );\n}\n\nexport default MonthlySummaryView;\n","import MonthlyAggregation from 'components/aggregation/model/MonthlyAggregation';\nimport MonthlyDetailsView from 'components/aggregation/MonthlyDetailsView';\nimport MonthlySummaryView from 'components/aggregation/MonthlySummaryView';\n\ntype Props = {\n  monthCursor: React.ReactNode\n  monthlyAggregation: MonthlyAggregation\n}\n\nfunction MonthlySummaryTable(props: Props) {\n  const { monthCursor, monthlyAggregation } = props;\n  return (\n    <div>\n      {monthCursor}\n      <MonthlySummaryView>{monthlyAggregation.asSummary()}</MonthlySummaryView>\n      <h3>内訳</h3>\n      <MonthlyDetailsView>{monthlyAggregation}</MonthlyDetailsView>\n    </div>\n  );\n}\n\nexport default MonthlySummaryTable;\n","import CursorRange from 'components/aggregation/model/CursorRange';\nimport Today from 'components/date/model/Today';\nimport CursorParams from './CursorParams';\n\ntype Props = {\n  cursorParams: CursorParams\n  cursorRange: CursorRange\n  onPrevClick?: () => void\n  onNextClick?: () => void\n}\n\nfunction SpecifiedMonthCursor(props: Props) {\n  const { cursorParams, cursorRange, onPrevClick, onNextClick } = props;\n  const prevClassNames = (cursorParams.hasPrev(cursorRange) ? [\"flip\"] : [\"flip\", \"flip--disabled\"]).join(\" \");\n  const nextClassNames = (cursorParams.hasNext(cursorRange) ? [\"flip\"] : [\"flip\", \"flip--disabled\"]).join(\" \");\n  const [year, month] = new Today().cursorMonth(cursorParams.cursor());\n  return (\n    <div className=\"month-cursor\">\n      <div className={prevClassNames} onClick={onPrevClick}>◀</div>\n      <div>\n        <h2>{\n          (cursorParams.cursor() === -1)\n            ? \"先月\"\n            : (cursorParams.cursor() === -2)\n              ? \"先々月\"\n              : `${-cursorParams.cursor()} ヶ月前`\n        }</h2>\n        <p>({year} 年 {month} 月)</p>\n      </div>\n      <div className={nextClassNames} onClick={onNextClick}>▶</div>\n    </div>\n  );\n}\n\nexport default SpecifiedMonthCursor;\n","import Aggregation from 'components/aggregation/model/Aggregation';\nimport WithLoading from 'components/ui/WithLoading';\nimport { QueryState } from 'infrastructure/useQuery';\nimport { useHistory, useLocation } from 'react-router';\nimport CurrentMonthCursor from './CurrentMonthCursor';\nimport CursorParams from './CursorParams';\nimport MonthlySummaryTable from './MonthlySummaryTable';\nimport SpecifiedMonthCursor from './SpecifiedMonthCursor';\n\ntype Props = {\n  state: QueryState<Aggregation>\n};\n\nfunction Dashboard(props: Props) {\n  const { isLoading, data } = props.state;\n  const history = useHistory();\n  const location = useLocation();\n  const cursorParams = new CursorParams(location.search);\n  return (\n    <WithLoading if={isLoading || data == null}>{() => {\n      const aggregation = data!!\n      const cursorRange = aggregation.cursorRange();\n      const cursorProps = {\n        cursorParams, cursorRange,\n        onPrevClick: () => history.push({ pathname: \".\", search: cursorParams.prevSearch() }),\n        onNextClick: () => history.push({ pathname: \".\", search: cursorParams.nextSearch() })\n      };\n      const monthCursor = cursorParams.isCurrentMonth()\n        ? <CurrentMonthCursor {...cursorProps} />\n        : <SpecifiedMonthCursor {...cursorProps} />\n      const monthlyAggregation = cursorParams.isCurrentMonth()\n        ? aggregation.currentMonth()\n        : aggregation.cursorMonth(cursorParams.cursor());\n      const props = { monthCursor, monthlyAggregation };\n      return <MonthlySummaryTable {...props} />\n    }}</WithLoading>\n  );\n}\n\nexport default Dashboard;\n","import useAggregationQuery from 'components/aggregation/model/useAggregationQuery';\nimport Center from 'components/ui/Center';\nimport { createBrowserHistory } from \"history\";\nimport DataSource from 'infrastructure/DataSource';\nimport DataSourceParams from 'infrastructure/DataSourceParams';\nimport Dashboard from 'pages/Dashboard';\nimport { Fragment } from 'react';\nimport { Route, Router } from 'react-router';\nimport { QueryState } from 'infrastructure/useQuery';\nimport Aggregation from 'components/aggregation/model/Aggregation';\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  const dataSourceParams = new DataSourceParams(history.location.search);\n  if (!dataSourceParams.validate()) return <InvalidParameters />;\n  const dataSource = dataSourceParams.dataSource();\n  return <EntryPoint {...{ dataSource }} />;\n}\n\nfunction InvalidParameters() {\n  console.error(\"invalid parameters.\");\n  return <Center>๐·°(৹˃ᗝ˂৹)°·๐</Center>;\n}\n\nfunction EntryPoint(props: { dataSource: DataSource }) {\n  const { dataSource } = props;\n  const state = useAggregationQuery(dataSource);\n  return (\n    <Fragment>\n      <header>\n        <h1>Online KAKEBO</h1>\n        <div className=\"reload\" onClick={() => window.location.reload()}>↻</div>\n      </header>\n      <hr />\n      <Router history={history}>\n        <Route path=\"/\" render={dashboard(state)} />\n      </Router>\n    </Fragment>\n  );\n}\n\nfunction dashboard(state: QueryState<Aggregation>) {\n  return () => <Dashboard {...{ state }} />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}