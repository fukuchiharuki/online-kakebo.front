{"version":3,"sources":["model/aggregation/AccountItemType.ts","infrastructure/DataSource.ts","infrastructure/DataSourceParams.ts","model/aggregation/useModel.ts","model/aggregation/AccountItem.ts","model/aggregation/MonthlySummary.ts","model/aggregation/MonthlyAggregation.ts","model/aggregation/Aggregation.ts","model/aggregation/useQuery.ts","infrastructure/useFetch.ts","ui/FadeIn.tsx","ui/Loading.tsx","ui/OrLoading.tsx","ui/Amount.tsx","ui/Mount.tsx","ui/Repeat.tsx","model/aggregation/view/MonthlyDetailsView.tsx","model/aggregation/view/MonthlySummaryView.tsx","model/date/Today.ts","page/Dashboard/CurrentMonthSummaryTable.tsx","page/Dashboard/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AccountItemType","DataSource","init","script","data","Object","assign","this","url","resource","DataSourceParams","search","urlSearchParams","URLSearchParams","get","specOf","accountItemType","食費","食費_個別","is収入","is特別費","category","日用品費","娯楽費","医療費","水道光熱費","通信費","住居費","特別費","元入金","ActionType","AccountItem","accountItem","amount","MonthlySummary","value","filter収入","totalAmount","filter支出","filter特別費","支出","収入","特別費を除いた支出","MonthlyAggregation","month","map","it","of","reduce","acc","includes","concat","filter","categoryIs","is","Aggregation","values","length","slice","initialState","isLoading","empty","reducer","state","action","type","FETCH","FETCHED","payload","json","useQuery","dataSource","aggregation","useReducer","dispatch","callback","preProcess","postProcess","errorHandler","useEffect","a","console","log","fetch","response","ok","useFetch","useCallback","fetchedAction","FadeIn","props","className","Loading","OrLoading","if","children","Amount","toLocaleString","Mount","Repeat","in","i","MonthlyDetailsView","monthlyAggregation","categories","categoryTotalAmount","filterByCategory","acountItemTypeAmount","filterByAccountItemType","diff","MonthlySummaryView","monthlySummary","特別費を含めた差引","Today","Date","endOfCurrentMonth","getFullYear","getMonth","Math","ceil","getTime","CurrentMonthSummaryTable","restOfCurrentMonth","asSummary","Dashboard","isEmpty","currentMonthAggregation","currentMonth","history","createBrowserHistory","dashboard","App","dataSouce","location","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d8f5463.chunk.js","sourcesContent":["enum AccountItemType {\n  食費 = \"食費\",\n  食費_個別 = \"食費(個別)\",\n  日用品費 = \"日用品費\",\n  娯楽費 = \"娯楽費\",\n  医療費 = \"医療費\",\n  水道光熱費 = \"水道光熱費\",\n  通信費 = \"通信費\",\n  住居費 = \"住居費\",\n  特別費 = \"特別費\",\n  元入金 = \"元入金\"\n}\n\nexport default AccountItemType;\n\nexport function specOf(accountItemType: AccountItemType) {\n  switch (accountItemType) {\n    case AccountItemType.食費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.食費 };\n    case AccountItemType.食費_個別:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.食費 };\n    case AccountItemType.日用品費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.日用品費 };\n    case AccountItemType.娯楽費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.娯楽費 };\n    case AccountItemType.医療費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.医療費 };\n    case AccountItemType.水道光熱費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.水道光熱費 };\n    case AccountItemType.通信費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.通信費 };\n    case AccountItemType.住居費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.住居費 };\n    case AccountItemType.特別費:\n      return { is収入: () => false, is特別費: () => true, category: () => AccountItemType.特別費 };\n    case AccountItemType.元入金:\n      return { is収入: () => true, is特別費: () => false, category: () => AccountItemType.元入金 };\n  }\n}\n","export default class DataSource {\n  script!: string;\n  data!: string;\n\n  constructor(init: Partial<DataSource>) {\n    Object.assign(this, init);\n  }\n\n  aggregation(): string {\n    return this.url(\"aggregation\");\n  }\n\n  private url(resource: string): string {\n    return `https://script.google.com/macros/s/${this.script}/exec?resource=${resource}&id=${this.data}`;\n  }\n}\n","import DataSource from './DataSource';\n\nexport default class DataSourceParams {\n  search!: string;\n\n  constructor(search: string) {\n    this.search = search;\n  }\n\n  dataSource(): DataSource {\n    const urlSearchParams = new URLSearchParams(this.search)\n    const script = urlSearchParams.get(\"script\")!;\n    const data = urlSearchParams.get(\"data\")!;\n    return new DataSource({ script, data });\n  }\n}\n","import RemoteResource from 'infrastructure/RemoteResource';\nimport { useReducer } from 'react';\nimport Aggregation from './Aggregation';\n\nenum ActionType {\n  FETCH,\n  FETCHED\n}\n\ninterface FetchAction {\n  type: typeof ActionType.FETCH;\n}\n\nexport function fetchAction(): FetchAction {\n  return { type: ActionType.FETCH };\n}\n\ninterface FetchedAction {\n  type: typeof ActionType.FETCHED;\n  payload: { json: any; };\n}\n\nexport function fetchedAction(json: any): FetchedAction {\n  return { type: ActionType.FETCHED, payload: { json } };\n}\n\ntype Action = FetchAction | FetchedAction;\n\nexport type State = RemoteResource & {\n  data: Aggregation;\n}\n\nconst initialState = {\n  isLoading: false,\n  data: Aggregation.empty()\n};\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case ActionType.FETCH:\n      return { ...state, isLoading: true };\n    case ActionType.FETCHED:\n      const data = new Aggregation({ values: action.payload.json });\n      return { ...state, data, isLoading: false };\n  }\n}\n\nexport default function useModel() {\n  return useReducer(reducer, initialState);\n}\n","import AccountItemType, { specOf } from \"./AccountItemType\";\n\nexport default class AccountItem {\n  accountItem!: AccountItemType;\n  amount!: number;\n\n  constructor(init: Partial<AccountItem>) {\n    Object.assign(this, init);\n  }\n\n  category(): AccountItemType {\n    return specOf(this.accountItem).category();\n  }\n\n  categoryIs(accountItemType: AccountItemType): boolean {\n    return this.category() === accountItemType;\n  }\n\n  is(accountItemType: AccountItemType): boolean {\n    return this.accountItem === accountItemType;\n  }\n\n  is収入(): boolean {\n    return specOf(this.accountItem).is収入();\n  }\n\n  is特別費(): boolean {\n    return specOf(this.accountItem).is特別費();\n  }\n}\n","import MonthlyAggregation from \"./MonthlyAggregation\";\n\nexport default class MonthlySummary {\n  value!: MonthlyAggregation;\n\n  private constructor(init: MonthlyAggregation) {\n    this.value = init;\n  }\n\n  static of(init: MonthlyAggregation): MonthlySummary {\n    return new MonthlySummary(init);\n  }\n\n  収入() {\n    return this.value.filter収入().totalAmount();\n  }\n\n  支出() {\n    return this.value.filter支出().totalAmount();\n  }\n\n  特別費() {\n    return this.value.filter特別費().totalAmount();\n  }\n\n  特別費を除いた支出() {\n    return this.支出() - this.特別費();\n  }\n\n  特別費を含めない差引() {\n    return this.収入() - this.特別費を除いた支出();\n  }\n\n  特別費を含めた差引() {\n    return this.収入() - this.支出();\n  }\n}\n","import AccountItem from \"./AccountItem\";\nimport AccountItemType from \"./AccountItemType\";\nimport MonthlySummary from './MonthlySummary';\n\nexport default class MonthlyAggregation {\n  month!: string;\n  data!: AccountItem[];\n\n  constructor(init: Partial<MonthlyAggregation>) {\n    Object.assign(this, { ...init, data: init.data?.map(it => new AccountItem(it)) });\n  }\n\n  asSummary(): MonthlySummary {\n    return MonthlySummary.of(this)\n  }\n\n  totalAmount(): number {\n    return this.data\n      .map(it => it.amount)\n      .reduce((acc, amount) => acc + amount, 0);\n  }\n\n  categories(): AccountItemType[] {\n    return this.data\n      .map(it => it.category())\n      .reduce((acc, category) => acc.includes(category) ? acc : acc.concat(category), [] as AccountItemType[])\n  }\n\n  filterByCategory(accountItemType: AccountItemType): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.categoryIs(accountItemType))\n    });\n  }\n\n  filterByAccountItemType(accountItemType: AccountItemType): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.is(accountItemType))\n    });\n  }\n\n  filter収入(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.is収入())\n    });\n  }\n\n  filter支出(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => !it.is収入())\n    });\n  }\n\n  filter特別費(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.is特別費())\n    });\n  }\n}\n","import MonthlyAggregation from \"./MonthlyAggregation\";\n\nexport default class Aggregation {\n  values!: MonthlyAggregation[];\n\n  constructor(init: Partial<Aggregation>) {\n    Object.assign(this, { values: init.values?.map(it => new MonthlyAggregation(it)) });\n  }\n\n  static empty(): Aggregation {\n    return new Aggregation({ values: [] });\n  }\n\n  isEmpty(): boolean {\n    return this.values.length === 0;\n  }\n\n  currentMonth(): MonthlyAggregation {\n    return this.values.slice(-1)[0];\n  }\n}\n","import DataSource from \"infrastructure/DataSource\";\nimport useFetch, { Callback } from 'infrastructure/useFetch';\nimport { useCallback } from \"react\";\nimport useModel, { fetchAction, fetchedAction } from './useModel';\n\nfunction useQuery(dataSource: DataSource) {\n  const url = dataSource.aggregation();\n  const [state, dispatch] = useModel();\n  const callback: Callback = {\n    preProcess: useCallback(() => dispatch(fetchAction()), [dispatch]),\n    postProcess: useCallback((json) => dispatch(fetchedAction(json)), [dispatch])\n  }\n  useFetch(url, callback);\n  return state;\n}\n\nexport default useQuery;\n","import { useEffect } from \"react\";\n\nexport default function useFetch(\n  url: string,\n  callback: Callback\n) {\n  const { preProcess, postProcess, errorHandler } = callback;\n  useEffect(() => {\n    (async () => {\n      preProcess && preProcess();\n      console.log(`get ${url}`);\n      const response = await fetch(url);\n      if (response.ok) {\n        const json = await response.json();\n        postProcess && postProcess(json);\n        console.log(`ok`);\n      } else {\n        errorHandler && errorHandler();\n        console.log(`error`);\n      }\n    })();\n  }, [url, preProcess, postProcess, errorHandler]);\n}\n\nexport type Callback = {\n  preProcess?: () => void\n  postProcess?: (json: any) => void\n  errorHandler?: () => void\n};\n","import './FadeIn.scss';\n\ntype Props = {\n  children: any\n};\n\nexport default function FadeIn(props: Props) {\n  return <div className=\"fade-in\" {...props}></div>;\n}\n","import './Loading.scss';\n\nexport default function Loading() {\n  return <div><div className=\"loader\">Loading...</div></div>;\n}\n","import FadeIn from './FadeIn';\nimport Loading from \"./Loading\";\n\ntype Props = {\n  if: any,\n  children: any\n};\n\nfunction OrLoading(props: Props) {\n  if (props.if) return <Loading />;\n  const children =\n    (typeof props.children === \"function\")\n      ? props.children()\n      : props.children;\n  return <FadeIn>{children}</FadeIn>;\n}\n\nexport default OrLoading;\n","import { Fragment } from \"react\";\n\ntype Props = {\n  children: number\n};\n\nfunction Amount(props: Props) {\n  return (\n    <Fragment>{props.children.toLocaleString()}</Fragment>\n  );\n}\n\nexport default Amount;\n","import { Fragment } from \"react\";\n\ntype Props = {\n  if: any,\n  children: any\n};\n\nfunction Mount(props: Props) {\n  if (!props.if) return null;\n  const children =\n    (typeof props.children === \"function\")\n      ? props.children()\n      : props.children;\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default Mount;\n","import { Fragment } from \"react\";\n\ntype Props<T> = {\n  in: T[],\n  children: (it: T) => any\n};\n\nfunction Repeat<T>(props: Props<T>) {\n  return <Fragment>{props.in.map(props.children).map((it, i) => <Fragment key={i}>{it}</Fragment>)}</Fragment>\n}\n\nexport default Repeat;\n","import { Fragment } from 'react';\nimport Amount from 'ui/Amount';\nimport Mount from 'ui/Mount';\nimport Repeat from 'ui/Repeat';\nimport MonthlyAggregation from '../MonthlyAggregation';\n\ntype Props = {\n  children: MonthlyAggregation\n};\n\nfunction MonthlyDetailsView(props: Props) {\n  const monthlyAggregation = props.children;\n  return (\n    <dl className=\"monthly-details\">\n      <Repeat in={monthlyAggregation.categories()}>{it => {\n        const categoryTotalAmount = monthlyAggregation.filterByCategory(it).totalAmount();\n        const acountItemTypeAmount = monthlyAggregation.filterByAccountItemType(it).totalAmount();\n        const diff = categoryTotalAmount !== acountItemTypeAmount;\n        return (\n          <Fragment>\n            <dt>{it}<Mount if={diff}>*</Mount></dt>\n            <dd><Amount>{categoryTotalAmount}</Amount></dd>\n            <Mount if={diff}>\n              <dd>(*内 純粋な{it}: <Amount>{acountItemTypeAmount}</Amount>)</dd>\n            </Mount>\n          </Fragment>\n        );\n      }}</Repeat>\n    </dl>\n  );\n}\n\nexport default MonthlyDetailsView;\n","import Amount from 'ui/Amount';\nimport Mount from 'ui/Mount';\nimport MonthlySummary from '../MonthlySummary';\n\ntype Props = {\n  children: MonthlySummary\n};\n\nfunction MonthlySummaryView(props: Props) {\n  const monthlySummary = props.children;\n  return (\n    <dl className=\"monthly-summary\">\n      <dt>収入</dt>\n      <dd><Amount>{monthlySummary.収入()}</Amount></dd>\n      <dt>支出</dt>\n      <dd><Amount>{monthlySummary.特別費を除いた支出()}</Amount></dd>\n      <Mount if={monthlySummary.特別費()}>\n        <dd>(+ 特別費: <Amount>{monthlySummary.特別費()}</Amount>)</dd>\n      </Mount>\n      <dt>差引</dt>\n      <dd><Amount>{monthlySummary.特別費を含めた差引()}</Amount></dd>\n      <Mount if={monthlySummary.特別費()}>\n        <dd>(特別費込: <Amount>{monthlySummary.特別費を含めた差引()}</Amount>)</dd>\n      </Mount>\n    </dl>\n  );\n}\n\nexport default MonthlySummaryView;\n","class Today {\n  value!: Date;\n\n  constructor() {\n    this.value = new Date();\n  }\n\n  restOfCurrentMonth(): number {\n    const endOfCurrentMonth = new Date(this.value.getFullYear(), this.value.getMonth() + 1, 0);\n    return Math.ceil((endOfCurrentMonth.getTime() - this.value.getTime()) / (24 * 60 * 60 * 1000));\n  }\n}\n\nexport default Today;\n","import MonthlyAggregation from 'model/aggregation/MonthlyAggregation';\nimport MonthlyDetailsView from 'model/aggregation/view/MonthlyDetailsView';\nimport MonthlySummaryView from 'model/aggregation/view/MonthlySummaryView';\nimport Today from 'model/date/Today';\n\ntype Props = {\n  monthlyAggregation: MonthlyAggregation\n}\n\nfunction CurrentMonthSummaryTable(props: Props) {\n  const { monthlyAggregation } = props;\n  return (\n    <div>\n      <h2>今月</h2>\n      <p>(残り {new Today().restOfCurrentMonth()} 日)</p>\n      <MonthlySummaryView>{monthlyAggregation.asSummary()}</MonthlySummaryView>\n      <h3>内訳</h3>\n      <MonthlyDetailsView>{monthlyAggregation}</MonthlyDetailsView>\n    </div>\n  );\n}\n\nexport default CurrentMonthSummaryTable;\n","import { State } from 'model/aggregation/useModel';\nimport OrLoading from 'ui/OrLoading';\nimport CurrentMonthSummaryTable from './CurrentMonthSummaryTable';\n\ntype Props = {\n  state: State\n};\n\nfunction Dashboard(props: Props) {\n  const { isLoading, data } = props.state;\n  return (\n    <OrLoading if={isLoading || data.isEmpty()}>{() => {\n      const currentMonthAggregation = data.currentMonth();\n      return <CurrentMonthSummaryTable monthlyAggregation={currentMonthAggregation} />\n    }}</OrLoading>\n  );\n}\n\nexport default Dashboard;\n","import { createBrowserHistory } from \"history\";\nimport DataSourceParams from 'infrastructure/DataSourceParams';\nimport { State } from 'model/aggregation/useModel';\nimport useQuery from 'model/aggregation/useQuery';\nimport Dashboard from 'page/Dashboard';\nimport { Fragment } from 'react';\nimport { Route, Router } from 'react-router';\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  const dataSouce = new DataSourceParams(history.location.search).dataSource();\n  const state = useQuery(dataSouce);\n  return (\n    <Fragment>\n      <header>\n        <h1>Online KAKEBO</h1>\n      </header>\n      <hr />\n      <Router history={history}>\n        <Route path=\"/\" render={dashboard(state)} />\n      </Router>\n    </Fragment>\n  );\n}\n\nexport type RouterProps = {\n  location: {\n    search: string\n  };\n}\n\nfunction dashboard(state: State) {\n  return (props: RouterProps) => <Dashboard {...{ ...props, state }} />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}