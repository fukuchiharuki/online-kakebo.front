{"version":3,"sources":["infrastructure/DataSource.ts","infrastructure/DataSourceParams.ts","model/aggregation/AccountItemType.ts","model/aggregation/CursorRange.ts","model/aggregation/useModel.ts","model/aggregation/AccountItem.ts","model/aggregation/MonthlySummary.ts","model/aggregation/MonthlyAggregation.ts","model/aggregation/Aggregation.ts","model/aggregation/useQuery.ts","infrastructure/useFetch.ts","ui/FadeIn.tsx","ui/Loading.tsx","ui/OrLoading.tsx","model/date/Today.ts","page/Dashboard/CurrentMonthCursor.tsx","page/Dashboard/CursorParams.tsx","ui/Amount.tsx","ui/Mount.tsx","ui/Repeat.tsx","model/aggregation/view/MonthlyDetailsView.tsx","model/aggregation/view/MonthlySummaryView.tsx","page/Dashboard/MonthlySummaryTable.tsx","page/Dashboard/SpecifiedMonthCursor.tsx","page/Dashboard/index.tsx","ui/Center.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DataSource","init","script","data","Object","assign","this","url","resource","DataSourceParams","search","urlSearchParams","URLSearchParams","get","reduce","acc","param","AccountItemType","CursorRange","length","current","isInRange","cursor","specOf","accountItemType","食費","食費_個別","is収入","is特別費","category","日用品費","娯楽費","医療費","水道光熱費","通信費","住居費","特別費","元入金","ActionType","AccountItem","accountItem","amount","MonthlySummary","value","filter収入","totalAmount","filter支出","filter特別費","支出","収入","特別費を除いた支出","MonthlyAggregation","month","map","it","of","includes","concat","filter","categoryIs","is","Aggregation","values","slice","cursorMonth","initialState","isLoading","empty","reducer","state","action","type","FETCH","FETCHED","payload","json","useQuery","dataSource","aggregation","useReducer","dispatch","callback","preProcess","postProcess","errorHandler","useEffect","a","console","log","fetch","response","ok","useFetch","useCallback","fetchedAction","FadeIn","props","className","Loading","OrLoading","if","children","Today","Date","endOfCurrentMonth","getFullYear","getMonth","Math","ceil","getTime","date","i","setDate","CurrentMonthCursor","cursorParams","cursorRange","onPrevClick","onNextClick","prevClassNames","hasPrev","join","onClick","restOfCurrentMonth","CursorParams","parseInt","range","hasNext","offsetSearch","offset","searchParams","set","toString","Amount","toLocaleString","Mount","Repeat","in","MonthlyDetailsView","monthlyAggregation","categories","categoryTotalAmount","filterByCategory","acountItemTypeAmount","filterByAccountItemType","diff","MonthlySummaryView","monthlySummary","特別費を含めた差引","MonthlySummaryTable","monthCursor","asSummary","SpecifiedMonthCursor","nextClassNames","year","Dashboard","history","useHistory","location","useLocation","isEmpty","cursorProps","push","pathname","prevSearch","nextSearch","isCurrentMonth","currentMonth","Center","createBrowserHistory","InvalidParameters","error","EntryPoint","path","render","dashboard","App","dataSourceParams","validate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.935404e9.chunk.js","sourcesContent":["export default class DataSource {\n  script!: string;\n  data!: string;\n\n  constructor(init: Partial<DataSource>) {\n    Object.assign(this, init);\n  }\n\n  aggregation(): string {\n    return this.url(\"aggregation\");\n  }\n\n  private url(resource: string): string {\n    return `https://script.google.com/macros/s/${this.script}/exec?resource=${resource}&id=${this.data}`;\n  }\n}\n","import DataSource from './DataSource';\n\nexport default class DataSourceParams {\n  search!: string;\n\n  constructor(search: string) {\n    this.search = search;\n  }\n\n  validate(): boolean {\n    const urlSearchParams = new URLSearchParams(this.search);\n    return !![\n      urlSearchParams.get(\"script\"),\n      urlSearchParams.get(\"data\")\n    ].reduce((acc, param) => acc && param);\n  }\n\n  dataSource(): DataSource {\n    const urlSearchParams = new URLSearchParams(this.search)\n    const script = urlSearchParams.get(\"script\")!;\n    const data = urlSearchParams.get(\"data\")!;\n    return new DataSource({ script, data });\n  }\n}\n","enum AccountItemType {\n  食費 = \"食費\",\n  食費_個別 = \"食費(個別)\",\n  日用品費 = \"日用品費\",\n  娯楽費 = \"娯楽費\",\n  医療費 = \"医療費\",\n  水道光熱費 = \"水道光熱費\",\n  通信費 = \"通信費\",\n  住居費 = \"住居費\",\n  特別費 = \"特別費\",\n  元入金 = \"元入金\"\n}\n\nexport default AccountItemType;\n\nexport function specOf(accountItemType: AccountItemType) {\n  switch (accountItemType) {\n    case AccountItemType.食費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.食費 };\n    case AccountItemType.食費_個別:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.食費 };\n    case AccountItemType.日用品費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.日用品費 };\n    case AccountItemType.娯楽費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.娯楽費 };\n    case AccountItemType.医療費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.医療費 };\n    case AccountItemType.水道光熱費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.水道光熱費 };\n    case AccountItemType.通信費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.通信費 };\n    case AccountItemType.住居費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.住居費 };\n    case AccountItemType.特別費:\n      return { is収入: () => false, is特別費: () => true, category: () => AccountItemType.特別費 };\n    case AccountItemType.元入金:\n      return { is収入: () => true, is特別費: () => false, category: () => AccountItemType.元入金 };\n  }\n}\n","export default class CursorRange {\n  length!: number;\n\n  constructor(length: number) {\n    this.length = length;\n  }\n\n  hasNext(current: number): boolean {\n    return this.isInRange(current + 1);\n  }\n\n  hasPrev(current: number): boolean {\n    return this.isInRange(current - 1);\n  }\n\n  private isInRange(cursor: number): boolean {\n    return (-this.length < cursor && cursor <= 0);\n  }\n}\n","import RemoteResource from 'infrastructure/RemoteResource';\nimport { useReducer } from 'react';\nimport Aggregation from './Aggregation';\n\nenum ActionType {\n  FETCH,\n  FETCHED\n}\n\ninterface FetchAction {\n  type: typeof ActionType.FETCH;\n}\n\nexport function fetchAction(): FetchAction {\n  return { type: ActionType.FETCH };\n}\n\ninterface FetchedAction {\n  type: typeof ActionType.FETCHED;\n  payload: { json: any; };\n}\n\nexport function fetchedAction(json: any): FetchedAction {\n  return { type: ActionType.FETCHED, payload: { json } };\n}\n\ntype Action = FetchAction | FetchedAction;\n\nexport type State = RemoteResource & {\n  data: Aggregation;\n}\n\nconst initialState = {\n  isLoading: false,\n  data: Aggregation.empty()\n};\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case ActionType.FETCH:\n      return { ...state, isLoading: true };\n    case ActionType.FETCHED:\n      const data = new Aggregation({ values: action.payload.json });\n      return { ...state, data, isLoading: false };\n  }\n}\n\nexport default function useModel() {\n  return useReducer(reducer, initialState);\n}\n","import AccountItemType, { specOf } from \"./AccountItemType\";\n\nexport default class AccountItem {\n  accountItem!: AccountItemType;\n  amount!: number;\n\n  constructor(init: Partial<AccountItem>) {\n    Object.assign(this, init);\n  }\n\n  category(): AccountItemType {\n    return specOf(this.accountItem).category();\n  }\n\n  categoryIs(accountItemType: AccountItemType): boolean {\n    return this.category() === accountItemType;\n  }\n\n  is(accountItemType: AccountItemType): boolean {\n    return this.accountItem === accountItemType;\n  }\n\n  is収入(): boolean {\n    return specOf(this.accountItem).is収入();\n  }\n\n  is特別費(): boolean {\n    return specOf(this.accountItem).is特別費();\n  }\n}\n","import MonthlyAggregation from \"./MonthlyAggregation\";\n\nexport default class MonthlySummary {\n  value!: MonthlyAggregation;\n\n  private constructor(init: MonthlyAggregation) {\n    this.value = init;\n  }\n\n  static of(init: MonthlyAggregation): MonthlySummary {\n    return new MonthlySummary(init);\n  }\n\n  収入() {\n    return this.value.filter収入().totalAmount();\n  }\n\n  支出() {\n    return this.value.filter支出().totalAmount();\n  }\n\n  特別費() {\n    return this.value.filter特別費().totalAmount();\n  }\n\n  特別費を除いた支出() {\n    return this.支出() - this.特別費();\n  }\n\n  特別費を含めない差引() {\n    return this.収入() - this.特別費を除いた支出();\n  }\n\n  特別費を含めた差引() {\n    return this.収入() - this.支出();\n  }\n}\n","import AccountItem from \"./AccountItem\";\nimport AccountItemType from \"./AccountItemType\";\nimport MonthlySummary from './MonthlySummary';\n\nexport default class MonthlyAggregation {\n  month!: string;\n  data!: AccountItem[];\n\n  constructor(init: Partial<MonthlyAggregation>) {\n    Object.assign(this, { ...init, data: init.data?.map(it => new AccountItem(it)) });\n  }\n\n  asSummary(): MonthlySummary {\n    return MonthlySummary.of(this)\n  }\n\n  totalAmount(): number {\n    return this.data\n      .map(it => it.amount)\n      .reduce((acc, amount) => acc + amount, 0);\n  }\n\n  categories(): AccountItemType[] {\n    return this.data\n      .map(it => it.category())\n      .reduce((acc, category) => acc.includes(category) ? acc : acc.concat(category), [] as AccountItemType[])\n  }\n\n  filterByCategory(accountItemType: AccountItemType): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.categoryIs(accountItemType))\n    });\n  }\n\n  filterByAccountItemType(accountItemType: AccountItemType): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.is(accountItemType))\n    });\n  }\n\n  filter収入(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.is収入())\n    });\n  }\n\n  filter支出(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => !it.is収入())\n    });\n  }\n\n  filter特別費(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.is特別費())\n    });\n  }\n}\n","import CursorRange from './CursorRange';\nimport MonthlyAggregation from \"./MonthlyAggregation\";\n\nexport default class Aggregation {\n  values!: MonthlyAggregation[];\n\n  constructor(init: Partial<Aggregation>) {\n    Object.assign(this, { values: init.values?.map(it => new MonthlyAggregation(it)) });\n  }\n\n  static empty(): Aggregation {\n    return new Aggregation({ values: [] });\n  }\n\n  isEmpty(): boolean {\n    return this.values.length === 0;\n  }\n\n  cursorRange(): CursorRange {\n    return new CursorRange(this.values.length);\n  }\n\n  cursorMonth(cursor: number): MonthlyAggregation {\n    return this.values.slice(cursor - 1)[0];\n  }\n\n  currentMonth(): MonthlyAggregation {\n    return this.cursorMonth(0);\n  }\n}\n","import DataSource from \"infrastructure/DataSource\";\nimport useFetch, { Callback } from 'infrastructure/useFetch';\nimport { useCallback } from \"react\";\nimport useModel, { fetchAction, fetchedAction } from './useModel';\n\nfunction useQuery(dataSource: DataSource) {\n  const url = dataSource.aggregation();\n  const [state, dispatch] = useModel();\n  const callback: Callback = {\n    preProcess: useCallback(() => dispatch(fetchAction()), [dispatch]),\n    postProcess: useCallback((json) => dispatch(fetchedAction(json)), [dispatch])\n  }\n  useFetch(url, callback);\n  return state;\n}\n\nexport default useQuery;\n","import { useEffect } from \"react\";\n\nexport default function useFetch(\n  url: string,\n  callback: Callback\n) {\n  const { preProcess, postProcess, errorHandler } = callback;\n  useEffect(() => {\n    (async () => {\n      preProcess && preProcess();\n      console.log(`get ${url}`);\n      const response = await fetch(url);\n      if (response.ok) {\n        const json = await response.json();\n        postProcess && postProcess(json);\n        console.log(`ok`);\n      } else {\n        errorHandler && errorHandler();\n        console.log(`error`);\n      }\n    })();\n  }, [url, preProcess, postProcess, errorHandler]);\n}\n\nexport type Callback = {\n  preProcess?: () => void\n  postProcess?: (json: any) => void\n  errorHandler?: () => void\n};\n","import './FadeIn.scss';\n\ntype Props = {\n  children: any\n};\n\nexport default function FadeIn(props: Props) {\n  return <div className=\"fade-in\" {...props} />;\n}\n","import './Loading.scss';\n\nexport default function Loading() {\n  return <div><div className=\"loader\">Loading...</div></div>;\n}\n","import FadeIn from './FadeIn';\nimport Loading from \"./Loading\";\n\ntype Props = {\n  if: any,\n  children: any\n};\n\nfunction OrLoading(props: Props) {\n  if (props.if) return <Loading />;\n  const children =\n    (typeof props.children === \"function\")\n      ? props.children()\n      : props.children;\n  return <FadeIn>{children}</FadeIn>;\n}\n\nexport default OrLoading;\n","class Today {\n  value!: Date;\n\n  constructor() {\n    this.value = new Date();\n  }\n\n  restOfCurrentMonth(): number {\n    const endOfCurrentMonth = new Date(this.value.getFullYear(), this.value.getMonth() + 1, 0);\n    return Math.ceil((endOfCurrentMonth.getTime() - this.value.getTime()) / (24 * 60 * 60 * 1000));\n  }\n\n  cursorMonth(cursor: number): [number, number] {\n    const date = new Date(this.value.getTime())\n    for (let i = 0; i > cursor; i--) date.setDate(0);\n    return [date.getFullYear(), date.getMonth() + 1];\n  }\n}\n\nexport default Today;\n","import CursorRange from 'model/aggregation/CursorRange';\nimport Today from 'model/date/Today';\nimport CursorParams from './CursorParams';\n\ntype Props = {\n  cursorParams: CursorParams\n  cursorRange: CursorRange\n  onPrevClick?: () => void\n  onNextClick?: () => void\n}\n\nfunction CurrentMonthCursor(props: Props) {\n  const { cursorParams, cursorRange, onPrevClick, onNextClick } = props;\n  const prevClassNames = (cursorParams.hasPrev(cursorRange)? [\"flip\"]:  [\"flip\", \"flip--disabled\"]).join(\" \");\n  const nextClassNames = \"flip flip--disabled\";\n  return (\n    <div className=\"month-cursor\">\n      <div className={prevClassNames} onClick={onPrevClick}>◀</div>\n      <div>\n        <h2>今月</h2>\n        <p>(残り {new Today().restOfCurrentMonth()} 日)</p>\n      </div>\n      <div className={nextClassNames} onClick={onNextClick}>▶</div>\n    </div>\n  );\n}\n\nexport default CurrentMonthCursor;\n","import CursorRange from \"model/aggregation/CursorRange\";\n\nexport default class CursorParams {\n  search!: string;\n\n  constructor(search: string) {\n    this.search = search;\n  }\n\n  isCurrentMonth(): boolean {\n    return this.cursor() === 0;\n  }\n\n  cursor(): number {\n    const urlSearchParams = new URLSearchParams(this.search);\n    return parseInt(urlSearchParams.get(\"cursor\")!) || 0;\n  }\n\n  hasNext(range: CursorRange): boolean {\n    return range.hasNext(this.cursor());\n  }\n\n  hasPrev(range: CursorRange): boolean {\n    return range.hasPrev(this.cursor());\n  }\n\n  nextSearch(): string {\n    return this.offsetSearch(1);\n  }\n\n  prevSearch(): string {\n    return this.offsetSearch(-1);\n  }\n\n  private offsetSearch(offset: number): string {\n    const searchParams = new URLSearchParams(this.search);\n    searchParams.set(\"cursor\", (this.cursor() + offset).toString())\n    return searchParams.toString();\n  }\n}\n","import { Fragment } from \"react\";\n\ntype Props = {\n  children: number\n};\n\nfunction Amount(props: Props) {\n  return (\n    <Fragment>{props.children.toLocaleString()}</Fragment>\n  );\n}\n\nexport default Amount;\n","import { Fragment } from \"react\";\n\ntype Props = {\n  if: any,\n  children: any\n};\n\nfunction Mount(props: Props) {\n  if (!props.if) return null;\n  const children =\n    (typeof props.children === \"function\")\n      ? props.children()\n      : props.children;\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default Mount;\n","import { Fragment } from \"react\";\n\ntype Props<T> = {\n  in: T[],\n  children: (it: T) => any\n};\n\nfunction Repeat<T>(props: Props<T>) {\n  return <Fragment>{props.in.map(props.children).map((it, i) => <Fragment key={i}>{it}</Fragment>)}</Fragment>\n}\n\nexport default Repeat;\n","import { Fragment } from 'react';\nimport Amount from 'ui/Amount';\nimport Mount from 'ui/Mount';\nimport Repeat from 'ui/Repeat';\nimport MonthlyAggregation from '../MonthlyAggregation';\n\ntype Props = {\n  children: MonthlyAggregation\n};\n\nfunction MonthlyDetailsView(props: Props) {\n  const monthlyAggregation = props.children;\n  return (\n    <dl className=\"monthly-details\">\n      <Repeat in={monthlyAggregation.categories()}>{it => {\n        const categoryTotalAmount = monthlyAggregation.filterByCategory(it).totalAmount();\n        const acountItemTypeAmount = monthlyAggregation.filterByAccountItemType(it).totalAmount();\n        const diff = categoryTotalAmount !== acountItemTypeAmount;\n        return (\n          <Fragment>\n            <dt>{it}<Mount if={diff}>*</Mount></dt>\n            <dd><Amount>{categoryTotalAmount}</Amount></dd>\n            <Mount if={diff}>\n              <dd>(*内 純粋な{it}: <Amount>{acountItemTypeAmount}</Amount>)</dd>\n            </Mount>\n          </Fragment>\n        );\n      }}</Repeat>\n    </dl>\n  );\n}\n\nexport default MonthlyDetailsView;\n","import Amount from 'ui/Amount';\nimport Mount from 'ui/Mount';\nimport MonthlySummary from '../MonthlySummary';\n\ntype Props = {\n  children: MonthlySummary\n};\n\nfunction MonthlySummaryView(props: Props) {\n  const monthlySummary = props.children;\n  return (\n    <dl className=\"monthly-summary\">\n      <dt>収入</dt>\n      <dd><Amount>{monthlySummary.収入()}</Amount></dd>\n      <dt>支出</dt>\n      <dd><Amount>{monthlySummary.特別費を除いた支出()}</Amount></dd>\n      <Mount if={monthlySummary.特別費()}>\n        <dd>(+ 特別費: <Amount>{monthlySummary.特別費()}</Amount>)</dd>\n      </Mount>\n      <dt>差引</dt>\n      <dd><Amount>{monthlySummary.特別費を含めた差引()}</Amount></dd>\n      <Mount if={monthlySummary.特別費()}>\n        <dd>(特別費込: <Amount>{monthlySummary.特別費を含めた差引()}</Amount>)</dd>\n      </Mount>\n    </dl>\n  );\n}\n\nexport default MonthlySummaryView;\n","import MonthlyAggregation from 'model/aggregation/MonthlyAggregation';\nimport MonthlyDetailsView from 'model/aggregation/view/MonthlyDetailsView';\nimport MonthlySummaryView from 'model/aggregation/view/MonthlySummaryView';\n\ntype Props = {\n  monthCursor: React.ReactNode\n  monthlyAggregation: MonthlyAggregation\n}\n\nfunction MonthlySummaryTable(props: Props) {\n  const { monthCursor, monthlyAggregation } = props;\n  return (\n    <div>\n      {monthCursor}\n      <MonthlySummaryView>{monthlyAggregation.asSummary()}</MonthlySummaryView>\n      <h3>内訳</h3>\n      <MonthlyDetailsView>{monthlyAggregation}</MonthlyDetailsView>\n    </div>\n  );\n}\n\nexport default MonthlySummaryTable;\n","import CursorRange from 'model/aggregation/CursorRange';\nimport Today from 'model/date/Today';\nimport CursorParams from './CursorParams';\n\ntype Props = {\n  cursorParams: CursorParams\n  cursorRange: CursorRange\n  onPrevClick?: () => void\n  onNextClick?: () => void\n}\n\nfunction SpecifiedMonthCursor(props: Props) {\n  const { cursorParams, cursorRange, onPrevClick, onNextClick } = props;\n  const prevClassNames = (cursorParams.hasPrev(cursorRange) ? [\"flip\"] : [\"flip\", \"flip--disabled\"]).join(\" \");\n  const nextClassNames = (cursorParams.hasNext(cursorRange) ? [\"flip\"] : [\"flip\", \"flip--disabled\"]).join(\" \");\n  const [year, month] = new Today().cursorMonth(cursorParams.cursor());\n  return (\n    <div className=\"month-cursor\">\n      <div className={prevClassNames} onClick={onPrevClick}>◀</div>\n      <div>\n        <h2>{\n          (cursorParams.cursor() === -1)\n            ? \"先月\"\n            : (cursorParams.cursor() === -2)\n              ? \"先々月\"\n              : `${-cursorParams.cursor()} ヶ月前`\n        }</h2>\n        <p>({year} 年 {month} 月)</p>\n      </div>\n      <div className={nextClassNames} onClick={onNextClick}>▶</div>\n    </div>\n  );\n}\n\nexport default SpecifiedMonthCursor;\n","import { State } from 'model/aggregation/useModel';\nimport { useHistory, useLocation } from 'react-router';\nimport OrLoading from 'ui/OrLoading';\nimport CurrentMonthCursor from './CurrentMonthCursor';\nimport CursorParams from './CursorParams';\nimport MonthlySummaryTable from './MonthlySummaryTable';\nimport SpecifiedMonthCursor from './SpecifiedMonthCursor';\n\ntype Props = {\n  state: State\n};\n\nfunction Dashboard(props: Props) {\n  const { isLoading, data } = props.state;\n  const history = useHistory();\n  const location = useLocation();\n  const cursorParams = new CursorParams(location.search);\n  return (\n    <OrLoading if={isLoading || data.isEmpty()}>{() => {\n      const cursorRange = data.cursorRange();\n      const cursorProps = {\n        cursorParams, cursorRange,\n        onPrevClick: () => history.push({ pathname: \"/\", search: cursorParams.prevSearch() }),\n        onNextClick: () => history.push({ pathname: \"/\", search: cursorParams.nextSearch() })\n      };\n      const monthCursor = cursorParams.isCurrentMonth()\n        ? <CurrentMonthCursor {...cursorProps} />\n        : <SpecifiedMonthCursor {...cursorProps} />\n      const monthlyAggregation = cursorParams.isCurrentMonth()\n        ? data.currentMonth()\n        : data.cursorMonth(cursorParams.cursor());\n      const props = { monthCursor, monthlyAggregation };\n      return <MonthlySummaryTable {...props} />\n    }}</OrLoading>\n  );\n}\n\nexport default Dashboard;\n","import './Center.scss';\n\ntype Props = {\n  children: any\n};\n\nexport default function Center(props: Props) {\n  return <div className=\"center\" {...props} />;\n}\n","import { createBrowserHistory } from \"history\";\nimport DataSource from 'infrastructure/DataSource';\nimport DataSourceParams from 'infrastructure/DataSourceParams';\nimport { State } from 'model/aggregation/useModel';\nimport useQuery from 'model/aggregation/useQuery';\nimport Dashboard from 'page/Dashboard';\nimport { Fragment } from 'react';\nimport { Route, Router } from 'react-router';\nimport Center from 'ui/Center';\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  const dataSourceParams = new DataSourceParams(history.location.search);\n  if (!dataSourceParams.validate()) return <InvalidParameters />;\n  const dataSource = dataSourceParams.dataSource();\n  return <EntryPoint {...{ dataSource }} />;\n}\n\nfunction InvalidParameters() {\n  console.error(\"invalid parameters.\");\n  return <Center>๐·°(৹˃ᗝ˂৹)°·๐</Center>;\n}\n\nfunction EntryPoint(props: { dataSource: DataSource }) {\n  const { dataSource } = props;\n  const state = useQuery(dataSource);\n  return (\n    <Fragment>\n      <header>\n        <h1>Online KAKEBO</h1>\n      </header>\n      <hr />\n      <Router history={history}>\n        <Route path=\"/\" render={dashboard(state)} />\n      </Router>\n    </Fragment>\n  );\n}\n\nfunction dashboard(state: State) {\n  return () => <Dashboard {...{ state }} />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}