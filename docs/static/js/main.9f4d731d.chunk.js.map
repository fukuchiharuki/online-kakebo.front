{"version":3,"sources":["model/read/aggregation/AccountItemType.ts","model/read/aggregation/AccountItem.ts","model/read/aggregation/MonthlySummary.ts","model/read/aggregation/MonthlyAggregation.ts","model/read/aggregation/Aggregation.ts","model/read/aggregation/useFetch.ts","ui/Amount.tsx","ui/Mount.tsx","model/read/aggregation/view/MonthlySummaryView.tsx","infrastructure/DataSource.ts","ui/Repeat.tsx","model/read/aggregation/view/MonthlyDetailsView.tsx","page/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AccountItemType","specOf","accountItemType","食費","食費_個別","is収入","is特別費","category","日用品費","娯楽費","医療費","水道光熱費","通信費","住居費","特別費","元入金","AccountItem","init","accountItem","amount","Object","assign","this","MonthlySummary","value","filter収入","totalAmount","filter支出","filter特別費","支出","収入","特別費を除いた支出","MonthlyAggregation","month","data","map","it","of","reduce","acc","includes","concat","filter","is","Aggregation","values","length","slice","initialState","useFetch","dataSource","url","aggregation","useState","state","setState","useEffect","a","fetch","response","ok","json","Amount","props","children","toLocaleString","Mount","if","MonthlySummaryView","monthlySummary","className","特別費を含めた差引","DataSource","script","resource","Repeat","in","i","MonthlyDetailsView","monthlyAggregation","categories","filterBy","Dashboard","dataSouce","search","urlSearchParams","URLSearchParams","get","location","isEmpty","currentMonthAggregation","currentMonth","asSummary","history","createBrowserHistory","dashboard","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f4d731d.chunk.js","sourcesContent":["enum AccountItemType {\n  食費 = \"食費\",\n  食費_個別 = \"食費(個別)\",\n  日用品費 = \"日用品費\",\n  娯楽費 = \"娯楽費\",\n  医療費 = \"医療費\",\n  水道光熱費 = \"水道光熱費\",\n  通信費 = \"通信費\",\n  住居費 = \"住居費\",\n  特別費 = \"特別費\",\n  元入金 = \"元入金\"\n}\n\nexport default AccountItemType;\n\nexport function specOf(accountItemType: AccountItemType) {\n  switch (accountItemType) {\n    case AccountItemType.食費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.食費 };\n    case AccountItemType.食費_個別:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.食費 };\n    case AccountItemType.日用品費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.日用品費 };\n    case AccountItemType.娯楽費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.娯楽費 };\n    case AccountItemType.医療費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.医療費 };\n    case AccountItemType.水道光熱費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.水道光熱費 };\n    case AccountItemType.通信費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.通信費 };\n    case AccountItemType.住居費:\n      return { is収入: () => false, is特別費: () => false, category: () => AccountItemType.住居費 };\n    case AccountItemType.特別費:\n      return { is収入: () => false, is特別費: () => true, category: () => AccountItemType.特別費 };\n    case AccountItemType.元入金:\n      return { is収入: () => true, is特別費: () => false, category: () => AccountItemType.元入金 };\n  }\n}\n","import AccountItemType, { specOf } from \"./AccountItemType\";\n\nexport default class AccountItem {\n  accountItem!: AccountItemType;\n  amount!: number;\n\n  constructor(init: Partial<AccountItem>) {\n    Object.assign(this, init);\n  }\n\n  category(): AccountItemType {\n    return specOf(this.accountItem).category();\n  }\n\n  is(accountItemType: AccountItemType): boolean {\n    return accountItemType === this.accountItem;\n  }\n\n  is収入(): boolean {\n    return specOf(this.accountItem).is収入();\n  }\n\n  is特別費(): boolean {\n    return specOf(this.accountItem).is特別費();\n  }\n}\n","import MonthlyAggregation from \"./MonthlyAggregation\";\n\nexport default class MonthlySummary {\n  value!: MonthlyAggregation;\n\n  private constructor(init: MonthlyAggregation) {\n    this.value = init;\n  }\n\n  static of(init: MonthlyAggregation): MonthlySummary {\n    return new MonthlySummary(init);\n  }\n\n  収入() {\n    return this.value.filter収入().totalAmount();\n  }\n\n  支出() {\n    return this.value.filter支出().totalAmount();\n  }\n\n  特別費() {\n    return this.value.filter特別費().totalAmount();\n  }\n\n  特別費を除いた支出() {\n    return this.支出() - this.特別費();\n  }\n\n  特別費を含めない差引() {\n    return this.収入() - this.特別費を除いた支出();\n  }\n\n  特別費を含めた差引() {\n    return this.収入() - this.支出();\n  }\n}\n","import AccountItem from \"./AccountItem\";\nimport AccountItemType from \"./AccountItemType\";\nimport MonthlySummary from './MonthlySummary';\n\nexport default class MonthlyAggregation {\n  month!: string;\n  data!: AccountItem[];\n\n  constructor(init: Partial<MonthlyAggregation>) {\n    Object.assign(this, { ...init, data: init.data?.map(it => new AccountItem(it)) });\n  }\n\n  asSummary(): MonthlySummary {\n    return MonthlySummary.of(this)\n  }\n\n  totalAmount(): number {\n    return this.data\n      .map(it => it.amount)\n      .reduce((acc, amount) => acc + amount, 0);\n  }\n\n  categories(): AccountItemType[] {\n    return this.data\n      .map(it => it.category())\n      .reduce((acc, category) => acc.includes(category) ? acc : acc.concat(category), [] as AccountItemType[])\n  }\n\n  filterBy(accountItemType: AccountItemType): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.is(accountItemType))\n    });\n  }\n\n  filter収入(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.is収入())\n    });\n  }\n\n  filter支出(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => !it.is収入())\n    });\n  }\n\n  filter特別費(): MonthlyAggregation {\n    return new MonthlyAggregation({\n      month: this.month,\n      data: this.data.filter(it => it.is特別費())\n    });\n  }\n}\n","import MonthlyAggregation from \"./MonthlyAggregation\";\n\nexport default class Aggregation {\n  values!: MonthlyAggregation[];\n\n  constructor(init: Partial<Aggregation>) {\n    Object.assign(this, { values: init.values?.map(it => new MonthlyAggregation(it)) });\n  }\n\n  isEmpty(): boolean {\n    return this.values.length === 0;\n  }\n\n  currentMonth(): MonthlyAggregation {\n    return this.values.slice(-1)[0];\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport Aggregation from \"./Aggregation\";\nimport DataSource from \"infrastructure/DataSource\";\n\nconst initialState = new Aggregation({ values: [] });\n\nfunction useFetch(dataSource: DataSource) {\n  const url = dataSource.aggregation();\n  const [state, setState] = useState(initialState)\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(url)\n      if (response.ok) {\n        const aggregation = new Aggregation({ values: await response.json() });\n        setState(aggregation);\n      } else {\n        setState(initialState);\n      }\n    })();\n  }, [url])\n  return state;\n}\n\nexport default useFetch;\n","import { Fragment } from \"react\";\n\ntype Props = {\n  children: number\n};\n\nfunction Amount(props: Props) {\n  return (\n    <Fragment>{props.children.toLocaleString()}</Fragment>\n  );\n}\n\nexport default Amount;\n","import { Fragment } from \"react\";\n\ntype Props = {\n  if: any,\n  children: any\n};\n\nfunction Mount(props: Props) {\n  if (!props.if) return null;\n  return <Fragment>{props.children}</Fragment>;\n}\n\nexport default Mount;\n","import MonthlySummary from '../MonthlySummary';\nimport Amount from 'ui/Amount';\nimport Mount from 'ui/Mount';\n\ntype Props = {\n  children: MonthlySummary\n};\n\nfunction MonthlySummaryView(props: Props) {\n  const monthlySummary = props.children;\n  return (\n    <dl className=\"monthly-summary\">\n      <dt>収入</dt>\n      <dd><Amount>{monthlySummary.収入()}</Amount></dd>\n      <dt>支出</dt>\n      <dd><Amount>{monthlySummary.特別費を除いた支出()}</Amount></dd>\n      <Mount if={monthlySummary.特別費()}>\n        <dd>(+ 特別費: <Amount>{monthlySummary.特別費()}</Amount>)</dd>\n      </Mount>\n      <dt>差引</dt>\n      <dd><Amount>{monthlySummary.特別費を含めた差引()}</Amount></dd>\n      <Mount if={monthlySummary.特別費()}>\n        <dd>(特別費込: <Amount>{monthlySummary.特別費を含めた差引()}</Amount>)</dd>\n      </Mount>\n    </dl>\n  );\n}\n\nexport default MonthlySummaryView;\n","export default class DataSource {\n  script!: string;\n  data!: string;\n\n  constructor(init: Partial<DataSource>) {\n    Object.assign(this, init);\n  }\n\n  aggregation(): string {\n    return this.url(\"aggregation\");\n  }\n\n  private url(resource: string): string {\n    return `https://script.google.com/macros/s/${this.script}/exec?resource=${resource}&id=${this.data}`;\n  }\n}\n","import { Fragment } from \"react\";\n\ntype Props<T> = {\n  in: T[],\n  children: (it: T) => any\n};\n\nfunction Repeat<T>(props: Props<T>) {\n  return <Fragment>{props.in.map(props.children).map((it, i) => <Fragment key={i}>{it}</Fragment>)}</Fragment>\n}\n\nexport default Repeat;\n","import { Fragment } from 'react';\nimport MonthlyAggregation from '../MonthlyAggregation';\nimport Repeat from 'ui/Repeat';\nimport Amount from 'ui/Amount';\n\ntype Props = {\n  children: MonthlyAggregation\n};\n\nfunction MonthlyDetailsView(props: Props) {\n  const monthlyAggregation = props.children;\n  return (\n    <dl className=\"monthly-details\">\n      <Repeat in={monthlyAggregation.categories()}>{it =>\n        <Fragment>\n          <dt>{it}</dt>\n          <dd><Amount>{monthlyAggregation.filterBy(it).totalAmount()}</Amount></dd>\n        </Fragment>\n      }</Repeat>\n    </dl>\n  );\n}\n\nexport default MonthlyDetailsView;\n","import { Fragment } from 'react';\nimport { RouterProps } from 'App';\nimport useFetch from 'model/read/aggregation/useFetch';\nimport MonthlySummaryView from 'model/read/aggregation/view/MonthlySummaryView';\nimport DataSource from 'infrastructure/DataSource';\nimport MonthlyDetailsView from 'model/read/aggregation/view/MonthlyDetailsView';\n\ntype Props = RouterProps;\n\nfunction Dashboard(props: Props) {\n  const dataSouce = dataSource(props.location.search);\n  const aggregation = useFetch(dataSouce);\n  if (aggregation.isEmpty()) return <Fragment>Now loading...</Fragment>;\n  const currentMonthAggregation = aggregation.currentMonth();\n  return (\n    <Fragment>\n      <header>\n        <h1>Online KAKEBO</h1>\n      </header>\n      <hr />\n      <div>\n        <h2>今月</h2>\n        <MonthlySummaryView>{currentMonthAggregation.asSummary()}</MonthlySummaryView>\n        <h3>内訳</h3>\n        <MonthlyDetailsView>{currentMonthAggregation}</MonthlyDetailsView>\n      </div>\n    </Fragment>\n  );\n}\n\nfunction dataSource(search: string): DataSource {\n  const urlSearchParams = new URLSearchParams(search)\n  const script = urlSearchParams.get(\"script\")!;\n  const data = urlSearchParams.get(\"data\")!;\n  return new DataSource({ script, data });\n}\n\nexport default Dashboard;\n","import { Route, Router } from 'react-router';\nimport { createBrowserHistory } from \"history\";\nimport Dashboard from 'page/Dashboard';\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Route path=\"/\" render={dashboard} />\n    </Router>\n  );\n}\n\nfunction dashboard(props: any) { return <Dashboard {...props} /> }\n\nexport default App;\n\nexport type RouterProps = {\n  location: {\n    search: string\n  };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}